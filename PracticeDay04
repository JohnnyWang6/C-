7-1 计算平均分并输出低于平均分的成绩
分数 10
作者 李民 孙骏
单位 武汉理工大学
计算全班n个（n≤30）学生的平均分，输出平均分以及低于平均分的成绩。

输入格式:
先输入整数n，再依次输入n个整数成绩，以空格间隔。

输出格式:
在第一行以格式average=result输出平均分（result保留小数点后两位），在下一行依次输出低于平均分的成绩，每个成绩后跟一个空格。（注意最后一个数后面有一个空格）

输入样例:
20
67 78 77 45 97 65 53 90 75 88 85 76 72 75 87 56 96 92 44 70
输出样例:
average=74.40
67 45 65 53 72 56 44 70 


#include<stdio.h>
int main(){
    //定义整数和数组记录学生的成绩和成绩总分
    int n, sum=0, arr[30];
    //键盘输入n的值
    scanf("%d",&n);
    for(int i=0; i<n; i++){
        scanf("%d",&arr[i]);
        sum+=arr[i];
    }
    double average = sum*1.0/n;
    printf("average=%.2lf\n",average);
    for(int j=0; j<n; j++){
        if(arr[j]<average){
            printf("%d ",arr[j]);
        }
    }
    return 0;
}



7-2 求数组中第二大的元素
分数 15
作者 毛薇
单位 武汉理工大学
无需排序，求数组中第二大的元素。

输入格式:
在一行中输入10个整数，以空格分隔。

输出格式:
直接输出第二大的值。

输入样例:
在这里给出一组输入。例如：

81 78 80 67 85 42 86 82 90 73
输出样例:
在这里给出相应的输出。例如：

86


#include<stdio.h>
int main(){
    //定义数组存储整数
    int arr[10];
    //定义数组中的最大值和第二大的值
    int max=0, second;
    for(int i=0; i<10; i++){
        scanf("%d ",&arr[i]);
        if(arr[i]>max){
            max = arr[i];
        }
    }
    second = arr[0];
    for(int j=1; j<10; j++){
        if(arr[j] >= second && arr[j] < max){
            second = arr[j];
        }
    }
    printf("%d",second);
    return 0;
}


7-3 冒泡法排序
分数 10
作者 徐镜春
单位 浙江大学
将N个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前N−1个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对N个数的排序。

本题要求对任意给定的K（<N），输出扫描完第K遍后的中间结果数列。

输入格式：
输入在第1行中给出N和K（1≤K<N≤100），在第2行中给出N个待排序的整数，数字间以空格分隔。

输出格式：
在一行中输出冒泡排序法扫描完第K遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。

输入样例：
6 2
2 3 5 1 6 4
输出样例：
2 1 3 4 5 6


#include<stdio.h>
int main(){
    //定义整数N，和整数K和数组
    int N, K, arr[100];
    scanf("%d %d",&N,&K);
    for(int i=0; i<N; i++){
        scanf("%d ",&arr[i]);
    }
    for(int j=0; j<K; j++){
        for(int p=0; p<N-j-1; p++){
            if(arr[p]>arr[p+1]){
                int temp = arr[p];
                arr[p] = arr[p+1];
                arr[p+1] = temp;
            }
        }
    }
    for(int r=0; r<N; r++){
        if(r!=(N-1)){
           printf("%d ",arr[r]);
        }else{
            printf("%d",arr[r]);
        }
    }
    
    return 0;
}


7-4 评委打分
分数 15
作者 翁恺
单位 浙江大学
班级里要搞智力竞赛啦!同学们都踊跃参加。进入最后决赛的是10个同学，随着一道道题目的出示，有时是1号选手得分，有时是5号选手得分，每次答对者得10分，最后结果如何呢?

输入格式:
第一行有十个整数，表示十位同学的初始分。第二行一个整数n，表示有n道题竞赛。
接下去有n行，每行有一个数字x，x表示本次可以加分的选手序号（每次答对者得10分）。

输出格式:
10个同学最终的得分值，每两位同学之间有一个空格。

输入样例:
10 0 0 0 10 10 0 0 0 10
3
1
10
1
输出样例:
30 0 0 0 10 10 0 0 0 20


#include<stdio.h>
int main(){
    //一、定义二维数组存储每个选手的序号和得分情况
    int arr[10];
    for(int i=0; i<10; i++){
        //键盘输入每个选手的初始分
        scanf("%d ",&arr[i]);
    }
    //定义整数n决定有n道题竞赛
    int n;
    scanf("%d",&n);
    //定义序号x记录每次答题的选手序号
    int x;
    for(int j=0; j<n; j++){
        scanf("%d",&x);
        arr[x-1]+=10;
    }
    printf("%d",arr[0]);
    for(int k=1; k<10; k++){
        printf(" %d",arr[k]);
    }
    return 0;
}


7-5 组合数的和
分数 15
作者 陈越
单位 浙江大学
给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。要求所有可能组合出来的 2 位数字的和。例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。

输入格式：
输入在一行中先给出 N（1 < N < 10），随后一行给出 N 个不同的非 0 个位数字。数字间以空格分隔。

输出格式：
输出所有可能组合出来的2位数字的和。

输入样例：
3
2 8 5
输出样例：
330


#include<stdio.h>
int main(){
    //一、给出N的值决定有几个数字,并键盘输入
    int N;
    scanf("%d",&N);
    //二、依次输入这些数字并存储进数组
    int arr[N];
    for(int i=0; i<N; i++){
        scanf("%d ",&arr[i]);
    }
    //三、定义和sum
    int sum=0;
    //四、进行排列组合并求和
    //定义元素x存储任意的两位数
    int x;
    for(int o=0; o<N; o++){
        for(int j=0; j<N;j++){
            if(j==o){
                continue;
            }else{
                x=arr[o]*10+arr[j];
                sum+=x;
            }
        }
    }
    printf("%d",sum);
    return 0;
}


7-6 求二维数组中的最大值和最小值
分数 10
作者 顾治华
单位 武汉理工大学
编写程序，输入一个3×3的二维整数数组，输出其中最大值、最小值。

输入格式:
输入9个整型数到二维数组a[3][3]，数据之间用一个空格分隔。

输出格式:
输出数组a的最大值和最小值

输入样例:
在这里给出一组输入。例如：

1 2 3 4 5 6 7 8 9
输出样例:
在这里给出相应的输出。例如：

max=9 min=1


#include<stdio.h>
int main(){
    //一、定义一个3x3的二维数组和数组中的最大值和最小值
    int arr[3][3],max,min;
    scanf("%d",&arr[0][0]);
    max=arr[0][0];
    min=arr[0][0];
    //二、依次输入每个元素到数组里去
    for(int i=0; i<3; i++){
        for(int j=0; j<3; j++){
            if(i==0){
                j++;
            }
            scanf("%d ",&arr[i][j]);
            if(arr[i][j]>max){
                max=arr[i][j];
            }
            if(arr[i][j]<min){
                min=arr[i][j];
            }
        }
    }
    printf("max=%d min=%d",max,min);
    return 0;
}


7-7 判断上三角矩阵
分数 15
作者 C课程组
单位 浙江大学
上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。

本题要求编写程序，判断一个给定的方阵是否上三角矩阵。

输入格式：
输入第一行给出一个正整数T，为待测矩阵的个数。接下来给出T个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数n。随后n行，每行给出n个整数，其间以空格分隔。

输出格式：
每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。

输入样例：
3
3
1 2 3
0 4 5
0 0 6
2
1 0
-8 2
3
1 2 3
1 4 5
0 -1 6

输出样例：
YES
NO
NO



#include<stdio.h>
int main(){
    //一、输入正整数T确定待测矩阵的个数
    int T,n;
    scanf("%d",&T);
    for(int i=0; i<T; i++){
        //定义flag记录矩阵是否为上三角矩阵
        int flag=1;
        scanf("%d",&n);
        //定义数组记录该矩阵
        int arr[10][10];
        for(int j=0;j<n;j++){
            for(int k=0;k<n;k++){
                scanf("%d",&arr[j][k]);
            }
        }
        for(int p=1;p<n;p++){
                for(int y=0;y<p;y++){
                    if(arr[p][y]!=0){
                        flag=0;
                    }
                }
         }
        if(flag==1){
                printf("YES\n");
            }else{
                printf("NO\n");
            }
    }
    return 0;
}


7-8 方阵循环右移
分数 15
作者 颜晖
单位 浙大城市学院
本题要求编写程序，将给定n×n方阵中的每个元素循环向右移m个位置，即将第0、1、⋯、n−1列变换为第n−m、n−m+1、⋯、n−1、0、1、⋯、n−m−1列。

输入格式：
输入第一行给出两个正整数m和n（1≤n≤6）。接下来一共n行，每行n个整数，表示一个n阶的方阵。

输出格式：
按照输入格式输出移动后的方阵：即输出n行，每行n个整数，每个整数后输出一个空格。

输入样例：
2 3
1 2 3
4 5 6
7 8 9
输出样例：
2 3 1 
5 6 4 
8 9 7 



#include<stdio.h>
int main(){
    //一、给定正整数m和n，确定方阵的格式和向右移的个数。
    int m,n,p,x;
    scanf("%d %d",&m,&n);
    int arr[n][n];
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            x=j+m;
            if(x>=n){
                p=x/n;
                x=x-n*p;
            }
            scanf("%d ",&arr[i][x]);
        }
    }
    for(int p=0; p<n; p++){
        for(int k=0; k<n; k++){
            printf("%d ",arr[p][k]);
        }
        printf("\n");
    }
    return 0;
}


7-9 找最长的字符串
分数 15
作者 张泳
单位 浙大城市学院
本题要求编写程序，针对输入的N个字符串，输出其中最长的字符串。

输入格式：
输入第一行给出正整数N；随后N行，每行给出一个长度小于80的非空字符串，其中不会出现换行符，空格，制表符。

输出格式：
在一行中用以下格式输出最长的字符串：

The longest is: 最长的字符串
如果字符串的长度相同，则输出先输入的字符串。

输入样例：
5
li
wang
zhang
jin
xiang
输出样例：
The longest is: zhang


#include<stdio.h>
#include<string.h>
int main(){
    //一、输入正整数N决定有多少个字符串。
    int N;
    scanf("%d",&N);
    char arr[80],smax[80];
    scanf("%s",&arr);
    strcpy(smax,arr);
    for(int i=0; i<N; i++){
        scanf("%s\n",&arr);
        if(strlen(arr)>strlen(smax)){
            strcpy(smax,arr);
        }
    }
    printf("The longest is: %s",smax);
    return 0;
}

7-10 字符串字母大小写转换
分数 15
作者 颜晖
单位 浙大城市学院
本题要求编写程序，对一个以“#”结束的字符串，将其小写字母全部转换成大写字母，把大写字母全部转换成小写字母，其他字符不变输出。

输入格式：
输入为一个以“#”结束的字符串（不超过30个字符）。

输出格式：
在一行中输出大小写转换后的结果字符串。

输入样例：
Hello World! 123#
输出样例：
hELLO wORLD! 123



#include<stdio.h>
int main(){
    char c[30];
    int i=0;
    c[0]='1';
    char ch;
    while((ch=getchar())!='#'&&i<30){
        if(ch>=65&&ch<=90){
            ch=ch+32;
        }else if(ch>=97&&ch<=122){
            ch=ch-32;
        }
        putchar(ch);
        i++;
    }
    return 0;
}


7-11 字符串排序
分数 15
作者 张泳
单位 浙大城市学院
本题要求编写程序，读入5个字符串，按由小到大的顺序输出。

输入格式：
输入为由空格分隔的5个非空字符串，每个字符串不包括空格、制表符、换行符等空白字符，长度小于80。

输出格式：
按照以下格式输出排序后的结果：

After sorted:
每行一个字符串
输入样例：
red yellow blue black white
输出样例：
After sorted:
black
blue
red
white
yellow


#include<stdio.h>
#include<string.h>
#define MAX 80
#define N 5

int main()
{
    int i,j,temp[MAX];
    char str[N][MAX];                     //二维数组word，每行存放一个字符串
    for(i=0;i<N;i++)
        scanf("%s",str[i]);
    for(i=1;i<N;i++)                       //冒泡排序
    {
        for(j=0;j<N-i;j++)
            //如果后一行字符串大于该行，让它们交换位置。
        if(strcmp(str[j],str[j+1])>0)
        {
            strcpy(temp,str[j]);
            strcpy(str[j],str[j+1]);
            strcpy(str[j+1],temp);
        }
    }
    printf("After sorted:\n");
    for(i=0;i<N;i++)
        printf("%s\n",str[i]);
    return 0;
}



7-12 统计一行文本的单词个数
分数 15
作者 张彤彧
单位 浙江大学
本题目要求编写程序统计一行字符中单词的个数。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。

输入格式:
输入给出一行字符。

输出格式:
在一行中输出单词个数。

输入样例:
Let's go to room 209.

输出样例:
5



#include<stdio.h> 
int main(){
    char ch; 
    int count=0,blank=1; 
    while((ch=getchar())!='\n'){ 
       if(ch!=' ' && blank==1){
           count++; blank=0;
       } 
       if(ch==' ' && blank==0){
           blank=1;
       } 
     } 
     printf("%d\n",count); 
     return 0;

 }
 
 
 7-13 统计不及格人数
分数 10
作者 顾治华
单位 武汉理工大学
有4名学生，每名学生有4门课程，编写程序，要求输入所有学生的成绩，然后统计每门课不及格的人数。

输入格式:
输入4名学生的4门课程到二维数组a[4] [4] ，数据之间用一个空格分隔，每输入4个数，敲回车，成绩为整数。

输出格式:
在一行中输出每列数据中小于60的个数，即不及格人数，每个数据后有一个空格。

输入样例:
在这里给出一组输入。例如：

86 54 78 90
61 50 60 45
30 90 70 85
80 85 75 96

输出样例:
在这里给出相应的输出。例如：

1 2 0 1 


#include<stdio.h>
int main(){
    //一、定义二维数组并依次输入4名同学的4门课程成绩。
    //定义数组记录每列数据中小于60的个数，即每门课程的不及格人数。
    int fail[4] = {0,0,0,0};
    int arr[4][4];
    for(int i=0; i<4; i++){
        for(int j=0; j<4; j++){
            scanf("%d ",&arr[i][j]);
            if(arr[i][j]<60){
                fail[j]++;
            }
        }
    }
    //二、打印每门课程不及格的人数
    for(int k=0; k<4; k++){
        printf("%d ",fail[k]);
    }
    printf("\n");
    return 0;
}


7-14 转换日期的表示形式 (5.16)
分数 10
作者 汤练兵 孙骏
单位 武汉理工大学
编写程序，将以数字与斜杠组成的字符串形式表示的日期，转换为月份为英文缩写，其他为数字表示的日期形式。

若月份输入错误，则输出“Data Error”。（题目保证除月份外的数据输入正确。月份英文缩写依次分别为：Jan、Feb、Mar、Apr、May、Jun、Jul、Aug、Sep、Oct、Nov、Dec）

输入格式:
输入1个字符串，以“月/日/年”的形式表示的日期。（其中月、日、年均是正整数）

输出格式:
以“月,日,年”的形式输出日期，其中月份用英文缩写表示；若输入数据中月份错误，输出“Data Error”。

输入样例1:
1/28/2017
输出样例1:
Jan,28,2017
输入样例2:
18/28/2017
输出样例2:
Data Error


#include<stdio.h>
int main(){
    //一、定义数字月份对应的英文月份并输入以“月/日/年”形式表示的日期。
    char Month[12][10] = {"Jan","Feb","Mar","Apr","May","Jun","Jul",
                          "Aug","Sept","Oct","Nov","Dec"};
    int month,year,day;
    scanf("%d/%d/%d",&month,&day,&year);
    if(month<1||month>12){//如果输入月份超过或少于月份界限，输出错误信息。
        printf("Data Error");
        return 0;
    }
    //二、打印英文形式的月，日，年
    printf("%s,%d,%d",Month[month-1],day,year);
    return 0;
}



7-15 TicTacToe游戏--胜负判定
分数 15
作者 李民
单位 武汉理工大学
井字棋是一种在3x3格子上进行的连珠游戏，和五子棋比较类似，由于棋盘一般不画边框，格线排成井字故得名。

游戏规则：由分别代表O和X的两个游戏者轮流在格子里留下标记。由最先在任意一条直线上成功连接三个标记的一方获胜。(摘抄自百度百科)

QQ截图20210516153608.jpg

读入一个3X3的二维数组，数组元素为'X'表示下X，元素为'O'表示下O，数组元素为'.'（英文符号“点”）表示未下棋，现编写程序进行当前胜负的判断，如果X方胜，则显示"X win!"，如果O方胜，则显示"O win!"，如果无人获胜，则显示"No one win!"。

输入格式:
读入一个3X3的二维数组，数组元素为'X'表示下X，元素为'O'表示下O，数组元素为'.'（英文符号“点”）表示未下棋。

输出格式:
若X方胜，则显示"X win!"；若O方胜，则显示"O win!"；若无人获胜，则显示"No one win!"。

输入样例1:
X.O
OX.
O.X
输出样例2:
X win!
输入样例2:
O.O
XX.
X..
输出样例2:
No one win!


#include<stdio.h>
int main(){
    //一、定义3*3的二维数组存储字符，并依次输入各个字符。
    char ch[3][3];
    int xflag=0,oflag=0;//xflag=1代表x赢，0代表没赢，oflag同理。
    for(int i=0; i<3; i++){
            scanf("%s",ch[i]);
    }
    //二、判断每一行是否相等，因此只用循环每一行即可
    for(int j=0; j<3; j++){
        if(ch[j][0]==ch[j][1]&&ch[j][0]==ch[j][2]){
            if(ch[j][0]!='.'){//并且先不考虑.赢的情况
                if(ch[j][0]=='X')
                    xflag=1;
                else
                    oflag=1;
            }
        }
    }
    //三、判断每一列是否相等，因此只用循环每一列即可
    for(int k=0; k<3; k++){
        if(ch[0][k]==ch[1][k] && ch[0][k]==ch[2][k]){
            if(ch[0][k]!='.'){//先不考虑.赢的情况
                if(ch[0][k]=='X')
                    xflag=1;
                else
                    oflag=1;
            }
        }
    }
    //四、判断对角线的情况
    if((ch[0][0]==ch[1][1] && ch[0][0]==ch[2][2]) || (ch[0][2]==ch[1][1] && ch[0][2]==ch[2][0])){
        if(ch[0][0]!='.'){//先不考.赢的情况
            if(ch[0][0]=='X')
                xflag=1;
            else
                oflag=1;
        }
    }
    //五、判断到底谁胜利
    if(xflag==1&&oflag==0){//X赢O没赢
        printf("X win!");
    }else if(xflag==0&&oflag==1){//O赢X没赢
        printf("O win!");
    }else if(xflag==0&&oflag==0){//都没赢
        printf("No one win!");
    }
    return 0;
}
