7-1 求二维数组中的最大值和最小值
分数 15
作者 顾治华
单位 武汉理工大学
编写程序，输入一个3×3的二维整数数组，输出其中最大值、最小值。

输入格式:
输入9个整型数到二维数组a[3][3]，数据之间用一个空格分隔。

输出格式:
输出数组a的最大值和最小值

输入样例:
在这里给出一组输入。例如：

1 2 3 4 5 6 7 8 9
输出样例:
在这里给出相应的输出。例如：

max=9 min=1



#include<stdio.h>
int main(){
    int arr[3][3],max,min;
    scanf("%d",&arr[0][0]);
    max=min=arr[0][0];
    for(int i=0; i<3;i++){
        for(int j=0; j<3; j++){
            if(i==0&&j==0){
                continue;
            }
            scanf("%d ",&arr[i][j]);
            if(arr[i][j]>=max){
                max=arr[i][j];
            }else if(arr[i][j]<=min){
                min=arr[i][j];
            }
        }
    }
    printf("max=%d min=%d\n",max,min);
    return 0;
}


7-2 矩阵的转置运算2 (6.12)
分数 15
作者 顾治华
单位 武汉理工大学
使用数组指针编写程序，将一个n×n（n≤10）的矩阵进行转置，即将行与列互换，转置后再按n×n矩阵形式输出。

输入格式:
输入整数n，从第2行开始依次输入n×n个整数，各数以一个空格间隔。

输出格式:
输出n行n列的二维数组，每个元素右对齐输出占4列。

输入样例:
3
1 2 3 4 5 6 7 8 9
输出样例:
   1   4   7
   2   5   8
   3   6   9
   
   
   
   #include<stdio.h>
int main(){
    int n,temp;
    scanf("%d",&n);
    int arr[n][n];
    for(int i=0;i<n;i++){
        for(int j=0; j<n;j++){
            scanf("%d ",&arr[i][j]);
        }
    }
    for(int k=0;k<n;k++){
        for(int p=k+1;p<n;p++){
            temp=arr[k][p];
            arr[k][p]=arr[p][k];
            arr[p][k]=temp;
        }
    }
    for(int o=0;o<n;o++){
        for(int y=0;y<n;y++){
            printf("%4d",arr[o][y]);
        }
        printf("\n");
    }
    return 0;
}


7-3 统计不及格人数
分数 15
作者 顾治华
单位 武汉理工大学
有4名学生，每名学生有4门课程，编写程序，要求输入所有学生的成绩，然后统计每门课不及格的人数。

输入格式:
输入4名学生的4门课程到二维数组a[4] [4] ，数据之间用一个空格分隔，每输入4个数，敲回车，成绩为整数。

输出格式:
在一行中输出每列数据中小于60的个数，即不及格人数，每个数据后有一个空格。

输入样例:
在这里给出一组输入。例如：

86 54 78 90
61 50 60 45
30 90 70 85
80 85 75 96

输出样例:
在这里给出相应的输出。例如：

1 2 0 1 


#include<stdio.h>
int main(){
    //一、定义二维数组并依次输入4名同学的4门课程成绩。
    //定义数组记录每列数据中小于60的个数，即每门课程的不及格人数。
    int fail[4] = {0,0,0,0};
    int arr[4][4];
    for(int i=0; i<4; i++){
        for(int j=0; j<4; j++){
            scanf("%d ",&arr[i][j]);
            if(arr[i][j]<60){
                fail[j]++;
            }
        }
    }
    //二、打印每门课程不及格的人数
    for(int k=0; k<4; k++){
        printf("%d ",fail[k]);
    }
    printf("\n");
    return 0;
}



7-4 矩阵运算
分数 15
作者 C课程组
单位 浙江大学
给定一个n×n的方阵，本题要求计算该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。副对角线为从矩阵的右上角至左下角的连线。

输入格式:
输入第一行给出正整数n（1<n≤10）；随后n行，每行给出n个整数，其间以空格分隔。

输出格式:
在一行中给出该矩阵除副对角线、最后一列和最后一行以外的所有元素之和。

输入样例:
4
2 3 4 1
5 6 1 1
7 1 8 1
1 1 1 1
输出样例:
35



#include<stdio.h>
int main(){
    int n,sum=0,m;
    scanf("%d",&n);
    int arr[n][n];
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            scanf("%d ",&arr[i][j]);
            m=i+j;
            if(m==(n-1)||i==(n-1)||j==(n-1)){
                continue;
            }else{
                sum+=arr[i][j];
            }
        }
    }
    printf("%d",sum);
    return 0;
}



7-5 求矩阵的局部极大值
分数 15
作者 徐镜春
单位 浙江大学
给定M行N列的整数矩阵A，如果A的非边界元素A[i][j]大于相邻的上下左右4个元素，那么就称元素A[i][j]是矩阵的局部极大值。本题要求给定矩阵的全部局部极大值及其所在的位置。

输入格式：
输入在第一行中给出矩阵A的行数M和列数N（3≤M,N≤20）；最后M行，每行给出A在该行的N个元素的值。数字间以空格分隔。

输出格式：
每行按照“元素值 行号 列号”的格式输出一个局部极大值，其中行、列编号从1开始。要求按照行号递增输出；若同行有超过1个局部极大值，则该行按列号递增输出。若没有局部极大值，则输出“None 总行数 总列数”。

输入样例1：
4 5
1 1 1 1 1
1 3 9 3 1
1 5 3 5 1
1 1 1 1 1
输出样例1：
9 2 3
5 3 2
5 3 4
输入样例2：
3 5
1 1 1 1 1
9 3 9 9 1
1 5 3 5 1
输出样例2：
None 3 5
