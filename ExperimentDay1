7-1 逆序的三位数
分数 10
作者 翁恺
单位 浙江大学
程序每次读入一个正3位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入700，输出应该是7。

输入格式：
每个测试是一个3位的正整数。

输出格式：
输出按位逆序的数。

输入样例：
123
输出样例：
321

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int number;
    scanf("%d",&number);
    int ge = number % 10;
    int shi = (number / 10) % 10;
    int bai = number / 100;
    int newNumber = ge*100 + shi*10 + bai;
    printf("%d\n",newNumber);
    return 0;
}


7-2 求整数均值
分数 10
作者 乔林
单位 清华大学
本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。

输入格式:
输入在一行中给出4个整数，其间以空格分隔。

输出格式:
在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。

输入样例:
1 2 3 4
输出样例:
Sum = 10; Average = 2.5

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a, b, c, d, Sum;
    scanf("%d%d%d%d",&a,&b,&c,&d);
    float Average;
    Sum = a + b + c + d;
    Average = Sum / 4.0;
    printf("Sum = %d; Average = %.1f",Sum,Average);

    return 0;
}


7-3 混合类型数据格式化输入
分数 10
作者 乔林
单位 清华大学
本题要求编写程序，顺序读入浮点数1、整数、字符、浮点数2，再按照字符、整数、浮点数1、浮点数2的顺序输出。

输入格式：
输入在一行中顺序给出浮点数1、整数、字符、浮点数2，其间以1个空格分隔。

输出格式：
在一行中按照字符、整数、浮点数1、浮点数2的顺序输出，其中浮点数保留小数点后2位。

输入样例：
2.12 88 c 4.7
输出样例：
c 88 2.12 4.70

#include <stdio.h>
#include <stdlib.h>

int main()
{    
    float f1, f2;
    int n;
    char c;
    scanf("%f %d %c %f",&f1,&n,&c,&f2);
    printf("%c %d %.2f %.2f", c, n, f1, f2);
    return 0;
}


7-4 厘米换算英尺英寸
分数 10
作者 翁恺
单位 浙江大学
如果已知英制长度的英尺foot和英寸inch的值，那么对应的米是(foot+inch/12)×0.3048。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了1英尺等于12英寸。

输入格式：
输入在一行中给出1个正整数，单位是厘米。

输出格式：
在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。英寸的值应小于12。

输入样例：
170
输出样例：
5 6

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int number,inch,foot;
    scanf("%d", &number);
    foot = number / 100.0 /0.3048;
    inch = (number/100.0/0.3048-foot)*12;
    printf("%d %d",foot, inch);   
    return 0;
}


7-5 然后是几点
分数 10
作者 翁恺
单位 浙江大学
有时候人们用四位数字表示一个时间，比如 1106 表示 11 点零 6 分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。

读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，例如 5 点 30 分表示为 530；0 点 30 分表示为 030。注意，第二个数字表示的分钟数可能超过 60，也可能是负数。

输入格式：
输入在一行中给出 2 个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即 5 点 30 分表示为 530；0 点 30 分表示为 030。流逝的分钟数可能超过 60，也可能是负数。

输出格式：
输出不多于四位数字表示的终止时间，当小时为个位数时，没有前导的零。题目保证起始时间和终止时间在同一天内。

输入样例：
1120 110
输出样例：
1310

#include<stdio.h>
#include<stdlib.h>
int main(){
    int currentTime, pastTime;
    scanf("%d%d", &currentTime, &pastTime);
    int m1 = currentTime / 1000;
    int m2 = currentTime / 100 % 10;
    int m3 = m1 * 1000 + m2 * 100;
    int fenZhong = (currentTime % 10 + currentTime / 10 % 10 * 10) + pastTime;
    int result;
    if(fenZhong > 60){
       int o = fenZhong / 60;
       m3 = m3 + o * 100;
       int u = fenZhong - o*60;
       result = m3 + u;
    }else if(fenZhong < -60){
       int newO = fenZhong / 60;
       m3 = m3 + newO * 100;
       fenZhong = -fenZhong + newO*60;
       if(fenZhong == 0){
        result = m3; 
       }else{
        m3 = m3 - 1*100;
        int i = 60 - fenZhong;
        result = m3 + i;
       }
    }else if(fenZhong < 0){
        m3 = m3 - 1*100;
        int p = 60 + fenZhong;
        result = m3 + p;
    }else if(fenZhong == 0){
        result = m3;
    }else if(fenZhong > 0 && fenZhong < 60){
        result = m3 + fenZhong;
    }else if(fenZhong == -60){
        m3 = m3 - 1*100;
        result = m3;
    }

    if(result/100 == 0){
        printf("0%d",result);
    }else{
        printf("%d",result);
    }
    
 }
